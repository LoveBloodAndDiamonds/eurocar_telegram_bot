from aiogram import types
from aiogram.fsm.context import FSMContext

from bot.keyboards import (
    get_rent_regions_keyboard,
    get_rent_car_classification_keyboard,
    get_car_models_keyboard,
    get_rent_tariffs_keyboard
)
from bot.models import CarClassification, RentCallback
from bot.states import RentAutoState
from bot.utils import excel_data_updater_obj


async def rent_message_handler(message: types.Message, state: FSMContext) -> types.Message:
    """Handle FAQ message."""
    await state.set_state(RentAutoState.REGION)
    return await message.answer('–Ø –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –¥–ª—è –í–∞—Å.\n\n'
                                '<b>–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —Ä–µ–≥–∏–æ–Ω:</b>',
                                reply_markup=get_rent_regions_keyboard())


async def rent_callback_region(callback_query: types.CallbackQuery, callback_data: RentCallback, state: FSMContext):
    """–í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞."""
    if callback_data.answer_data == "cancel":  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return await callback_query.message.delete()

    await state.update_data(REGION=callback_data.answer_data)
    await state.set_state(RentAutoState.TARIFF)
    state_data = await state.get_data()
    return callback_query.message.edit_text(
        f"–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ:",
        reply_markup=get_rent_tariffs_keyboard(region=state_data['REGION']))


async def rent_callback_tariff(callback_query: types.CallbackQuery, callback_data: RentCallback, state: FSMContext):
    """–í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞."""
    if callback_data.answer_data == "cancel":  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return await callback_query.message.delete()

    if callback_data.answer_data == "back":  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞
        await state.set_state(RentAutoState.REGION)
        return await callback_query.message.edit_text('–Ø –∑–∞–¥–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å'
                                                   ' –¥–ª—è –í–∞—Å.\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —Ä–µ–≥–∏–æ–Ω:</b>',
                                                   reply_markup=get_rent_regions_keyboard())

    await state.update_data(TARIFF=callback_data.answer_data)
    await state.set_state(RentAutoState.CAR_CLASS)
    state_data = await state.get_data()

    cars_class_description = ""
    for classification in CarClassification:
        v = classification.value
        cars_class_description += f"<b>{v[3]} {v[1]}</b>: {v[2]}\n\n"
    return callback_query.message.edit_text(
        f"–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è:\n\n{classification}",
        reply_markup=get_rent_car_classification_keyboard(region=state_data['REGION'],
                                                          tariff=state_data['TARIFF']))


async def rent_callback_car_class(callback_query: types.CallbackQuery, callback_data: RentCallback, state: FSMContext):
    """–í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ –∞–≤—Ç–æ."""
    if callback_data.answer_data == "cancel":  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return await callback_query.message.delete()

    if callback_data.answer_data == "back":  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ—Ñ–∞
        state_data = await state.get_data()
        await state.set_state(RentAutoState.TARIFF)
        return callback_query.message.edit_text(f"–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ:",
                                                reply_markup=get_rent_tariffs_keyboard(region=state_data['REGION']))

    data: CarClassification.value = eval(f"{callback_data.answer_data}.value")  # –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –∫–æ–ª—Ö–æ–∑–∏–Ω–≥, –Ω–æ –º–Ω–µ
    # –ø–æ–∫–∞–∑–∞–ª–æ—Å—å, —á—Ç–æ —ç—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–∞—à–∏–Ω, –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥—è—Ç
    # –≤ –∫–ª–∞—Å—Å—ã –≤—Ä–æ–¥–µ "–≠–∫–æ–Ω–æ–º", "–ö–æ–º—Ñ–æ—Ä—Ç" –∏ –ø—Ä.

    await state.update_data(CAR_CLASS=data)
    await state.set_state(RentAutoState.CAR_MODEL)
    state_data = await state.get_data()
    car_models = excel_data_updater_obj.get_available_models(region=state_data["REGION"], car_class=data[0])
    return callback_query.message.edit_text(f"–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ:",
                                            reply_markup=get_car_models_keyboard(
                                                region=state_data['REGION'],
                                                car_models=car_models,
                                                tariff=state_data['TARIFF']))


async def rent_callback_car_model(callback_query: types.CallbackQuery, callback_data: RentCallback, state: FSMContext):
    """–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ."""
    if callback_data.answer_data == "cancel":  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        return await callback_query.message.delete()

    if callback_data.answer_data == "back":  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ –∞–≤—Ç–æ
        state_data = await state.get_data()
        await state.set_state(RentAutoState.CAR_CLASS)
        cars_class_description = ""
        for classification in CarClassification:
            v = classification.value
            cars_class_description += f"<b>{v[3]} {v[1]}</b>: {v[2]}\n\n"
        return callback_query.message.edit_text(
            f"–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è:\n\n{classification}",
            reply_markup=get_rent_car_classification_keyboard(region=state_data['REGION'],
                                                              tariff=state_data['TARIFF']))

    callback_data: tuple = eval(str(callback_data.answer_data))  # ('Nissan Qashqai', 'IGAR', 'AT')
    await state.update_data(CAR_MODEL=callback_data)
    data = await state.get_data()  # {'REGION': '–ú–æ—Å–∫–≤–∞',
    # 'TARIFF': '–°—É—Ç–∫–∏ (–æ—Ç 7 –¥–æ 13 –¥–Ω–µ–π)',
    # 'CAR_CLASS': (['EGAR', 'IGAR', 'SFAR'], '–ö—Ä–æ—Å—Å–æ–≤–µ—Ä', '#–¢–µ–∫—Å—Ç –ø—Ä–æ –∫—Ä–æ—Å—Å–æ–≤–µ—Ä', 'üöô'),
    # 'CAR_MODEL': ('Nissan Qashqai', 'IGAR', 'AT')}
    text = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä:\n\n" \
           f"–í–∞—à —Ä–µ–≥–∏–æ–Ω: {data['REGION']}\n" \
           f"–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ: {data['TARIFF']}\n" \
           f"–ö–ª–∞—Å—Å –∞–≤—Ç–æ: {data['CAR_CLASS'][1]}\n" \
           f"–ú–æ–¥–µ–ª—å –∞–≤—Ç–æ: {data['CAR_MODEL'][0]}\n" \
           f"–¢–∏–ø –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á: {data['CAR_MODEL'][2]}\n"
    return await callback_query.message.edit_text(text)
